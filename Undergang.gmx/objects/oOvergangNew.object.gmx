<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
gridWidth = 16;
gridHeight = 16;

/*aSimpleBlocks[0, 0] = 0;
aBlocks[0, 0] = 0;*/

for(v = 0; v &lt; (room_width / gridWidth); v++) {
    for(h = 0; h &lt; (room_height / gridHeight); h++) {
        aSimpleBlocks[v, h] = 0;
    }
}

//top layer //ceil
var maxWidthCurrentLayer = 10 + irandom(12);
var numBlocksInCurrentLayer = 0;
var lastSpawnedV = ((room_width / gridWidth) / 2) + ((room_width / gridWidth) / 4);
var firstSpawnedV = lastSpawnedV;
var lastSpawnedH = ((room_height / gridHeight) / 2);

aSimpleBlocks[lastSpawnedV, lastSpawnedH] = 1;
numBlocksInCurrentLayer++;
var maxHeight = ceil(maxWidthCurrentLayer / 2);
for (var i = 0; i &lt; maxHeight; i++) { 
    for (var j = 0; j &lt; maxWidthCurrentLayer - 1; j++) {
        aSimpleBlocks[lastSpawnedV, lastSpawnedH] = 1;
        lastSpawnedV--;
        numBlocksInCurrentLayer++;
        if (numBlocksInCurrentLayer == maxWidthCurrentLayer) {  }
    }
    var rnd1 = 1 + irandom(1);
    lastSpawnedH++; 
    firstSpawnedV -= rnd1;
    lastSpawnedV = firstSpawnedV;
    maxWidthCurrentLayer -= rnd1 * 2;
}

maxWidthCurrentLayer = 10 + irandom(12);
numBlocksInCurrentLayer = 0;
lastSpawnedV = ((room_width / gridWidth) / 2) + ((room_width / gridWidth) / 4) + (irandom(18) - 9);
firstSpawnedV = lastSpawnedV;
lastSpawnedH = ((room_height / gridHeight) / 2);

aSimpleBlocks[lastSpawnedV, lastSpawnedH] = 1;
numBlocksInCurrentLayer++;
var maxHeight = ceil(maxWidthCurrentLayer / 2);
for (var i = 0; i &lt; maxHeight; i++) { 
    for (var j = 0; j &lt; maxWidthCurrentLayer - 1; j++) {
        aSimpleBlocks[lastSpawnedV, lastSpawnedH] = 1;
        lastSpawnedV--;
        numBlocksInCurrentLayer++;
        if (numBlocksInCurrentLayer == maxWidthCurrentLayer) {  }
    }
    var rnd1 = 1 + irandom(1);
    lastSpawnedH++; 
    firstSpawnedV -= rnd1;
    lastSpawnedV = firstSpawnedV;
    maxWidthCurrentLayer -= rnd1 * 2;
}

//make offset for centering levels on x plane
var numBlocksTopRow = 0;
var currentBeginPosition = -1;
for(v = 0; v &lt; (room_width / gridWidth); v++) {
    if (aSimpleBlocks[v, (room_height / gridHeight) / 2] == 1) {
        if (currentBeginPosition == -1) {
            currentBeginPosition = v;
        }
        numBlocksTopRow++;
    }
}
var newBeginPosition = ceil(((room_width / gridWidth) / 2) - numBlocksTopRow / 2);
var xSpawnOffset = currentBeginPosition - newBeginPosition;

PlayerSpawn[0, 0] = newBeginPosition * gridWidth;
PlayerSpawn[0, 1] = 12 * gridHeight;

PlayerSpawn[1, 0] = (numBlocksTopRow + newBeginPosition - 1) * gridWidth;
PlayerSpawn[1, 1] = 12 * gridHeight;

PlayerSpawn[2, 0] = (newBeginPosition + (numBlocksTopRow / 4) + 2) * gridWidth;
PlayerSpawn[2, 1] = 12 * gridHeight;

PlayerSpawn[3, 0] = (newBeginPosition + ((numBlocksTopRow / 4) * 3) - 2) * gridWidth;
PlayerSpawn[3, 1] = 12 * gridHeight;

bla = instance_create(PlayerSpawn[0, 0], PlayerSpawn[0, 1], oBlockFilled);
bla2 = instance_create(PlayerSpawn[1, 0], PlayerSpawn[1, 1], oBlockFilled);
bla3 = instance_create(PlayerSpawn[2, 0], PlayerSpawn[2, 1], oBlockFilled);
bla4 = instance_create(PlayerSpawn[3, 0], PlayerSpawn[3, 1], oBlockFilled);

//spawn blocks
for(v = 0; v &lt; (room_width / gridWidth); v++) {
    for(h = 0; h &lt; (room_height / gridHeight); h++) {
        tmpSimpleBlock = aSimpleBlocks[v, h];
        if (tmpSimpleBlock == 1) {
            aBlocks[v, h] = instance_create((v - xSpawnOffset) * gridWidth, h * gridHeight, oBlock);
        }
    }
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
